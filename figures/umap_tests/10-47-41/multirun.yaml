hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
    n_jobs: -1
    backend: null
    prefer: processes
    require: null
    verbose: 0
    timeout: null
    pre_dispatch: 2*n_jobs
    batch_size: auto
    temp_folder: null
    max_nbytes: null
    mmap_mode: r
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra/launcher=joblib
    task:
    - ++dim_reduction.n_neighbors=10,20,50
    - ++dim_reduction.min_dist=0.5,0.8,1.0
    - ++generate_tsne_only=true
    - ++saved_model=/source/outputs/2021-08-29/2021-08-29/10-36-22/model_huge_100000.pt
  job:
    name: main
    override_dirname: ++dim_reduction.min_dist=0.5,0.8,1.0,++dim_reduction.n_neighbors=10,20,50,++generate_tsne_only=true,++saved_model=/source/outputs/2021-08-29/2021-08-29/10-36-22/model_huge_100000.pt
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /source
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /source/src/urban_sound/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      dim_reduction: umap
      dataset: urban_sound
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: joblib
      hydra/output: default
  verbose: false
dataset:
  audio_dir: data/UrbanSound8K/audio
  metadata_file: data/UrbanSound8K/metadata/UrbanSound8K.csv
  name: urban_sound
  channels: ???
  is_labelled: true
  is_pre_sliced: true
  grace_period: 0.25
  sample_rate: 16000
dim_reduction:
  n_neighbours: 30
  min_dist: 0.2
  n_components: 2
  name: umap
device: ???
model:
  z_size: 512
  c_size: 256
  encoder: cnn_large
  arencoder: gru
  look_ahead_layer: linear
  look_ahead: 12
  'N': 10
  negative_sample_selector: random
  embedding_generator: mean_c
training:
  update_interval: 50
  tsne_interval: 10000
  log_output: true
  shuffle: true
  batch_size: 8
  epochs: 100
saved_model: /source/outputs/2021-08-29/2021-08-29/10-36-22/model_huge_100000.pt
generate_tsne_only: true
profiler:
  profile: false
  warmup: 1
  active: 3
  wait: 1
optim:
  name: Adam
  lr: 0.0001
embeddings:
  save_embeddings: false
  load_embeddings: false
  embeddings_path: null
  labels_path: null
